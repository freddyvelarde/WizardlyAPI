version: "3.8"

services:
  nginx:
    container_name: nginx
    image: nginx:1.23.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - wizardlyapi

  express:
    container_name: wizardlyapi-server
    build:
      context: ./wizardlyapi-server
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      PORT: 8000
      NODE_ENV: production
      DATABASE_URL: postgresql://admin:admin@postgres:5432/wizardlyapi?schema=public
      JWT_SECRET_KEY: q1w2e3r4t5
    networks:
      - wizardlyapi
    volumes:
      - ./wizardlyapi-server:/app

  web-client:
    container_name: nextjs
    # networks:
    #   - scrapify-network
    build:
      context: ./wizardlyapi-web
      dockerfile: Dockerfile.dev
    ports:
      - "4545:3000"
    environment:
      PORT: 3000
    volumes:
      - ./wizardlyapi-web:/app

  # database
  postgres:
    networks:
      - wizardlyapi
    restart: always
    container_name: postgres
    image: postgres:15.2-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  wizardlyapi:

volumes:
  postgres-data:
